{"version":3,"file":"radio.esm.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../lib/radio.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\r\nimport {Radio, FormGroup, Form} from 'react-bootstrap'\r\nimport './styles.scss'\r\n\r\nexport interface IRadioHvProps {\r\n  selectedRadio: number | null | string\r\n  messages: string[]\r\n  label: string\r\n  selectedRadioHandler: (arg: number | string | null) => void\r\n}\r\n\r\ntype MyState = {\r\n  upload_radio: number | null | string // like this\r\n}\r\n\r\nexport class RadioHv extends React.Component<IRadioHvProps> {\r\n  state: MyState = {\r\n    upload_radio: null,\r\n  }\r\n  shouldComponentUpdate(nextProps: any, nextState: any) {\r\n    if (\r\n      nextProps.selectedRadio !== this.props.selectedRadio ||\r\n      this.state.upload_radio !== nextProps.selectedRadio\r\n    ) {\r\n      return true\r\n    }\r\n    if (this.state.upload_radio !== nextState.upload_radio) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any, _: any) {\r\n    if (\r\n      prevProps.selectedRadio == null ||\r\n      this.state.upload_radio !== prevProps.selectedRadio\r\n    ) {\r\n      this.props.selectedRadioHandler(this.state.upload_radio)\r\n    } else {\r\n      this.setState({upload_radio: null})\r\n    }\r\n  }\r\n  setStatus = (e: any) => {\r\n    this.setState({upload_radio: e.target.value})\r\n  }\r\n  render() {\r\n    return (\r\n      <Form className=\"row col-xs-12 col-sm-12 col-md-12 col-lg-12 provedores__form\">\r\n        <FormGroup className=\" col-xs-11 col-sm-11  col-md-11 col-lg-11 \">\r\n          {this.props.messages.map((message, id) => {\r\n            return (\r\n              <div\r\n                key={`${this.props.label}_${id}`}\r\n                className=\"provedores__selectorRadio  row\"\r\n              >\r\n                <div className=\"provedores__selectorLabelRadio col-xs-5 col-sm-5 col-md-5 col-lg-5\">\r\n                  <p className=\"provedores__RadioLabel\">{this.props.label}</p>\r\n                </div>\r\n                <Radio\r\n                  name={`${\r\n                    id === 0 ? this.props.messages[0] : this.props.messages[1]\r\n                  }`}\r\n                  checked={\r\n                    this.state.upload_radio ===\r\n                    `${\r\n                      id === 0 ? this.props.messages[0] : this.props.messages[1]\r\n                    }`\r\n                  }\r\n                  value={`${\r\n                    id === 0 ? this.props.messages[0] : this.props.messages[1]\r\n                  }`}\r\n                  onChange={this.setStatus}\r\n                  onKeyDown={this.setStatus}\r\n                  className=\"col-xs-5 col-sm-5 col-md-5 col-lg-5 provedores__Radio\"\r\n                >\r\n                  <span className=\"provedores__RadioText\">{message}</span>\r\n                </Radio>\r\n              </div>\r\n            )\r\n          })}\r\n        </FormGroup>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","RadioHv","React","Component","constructor","this","upload_radio","e","setState","target","value","shouldComponentUpdate","nextProps","nextState","selectedRadio","props","state","componentDidUpdate","prevProps","_","selectedRadioHandler","render","Form","className","FormGroup","messages","map","message","id","key","label","Radio","name","checked","onChange","setStatus","onKeyDown"],"mappings":"uFAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,wVCRjCe,UAAgBC,EAAMC,UAAnCC,kCACEC,WAAiB,CACfC,aAAc,MAyBhBD,eAAaE,IACXF,KAAKG,SAAS,CAACF,aAAcC,EAAEE,OAAOC,SAxBxCC,sBAAsBC,EAAgBC,GACpC,OACED,EAAUE,gBAAkBT,KAAKU,MAAMD,eACvCT,KAAKW,MAAMV,eAAiBM,EAAUE,eAIpCT,KAAKW,MAAMV,eAAiBO,EAAUP,aAM5CW,mBAAmBC,EAAgBC,GAEJ,MAA3BD,EAAUJ,eACVT,KAAKW,MAAMV,eAAiBY,EAAUJ,cAEtCT,KAAKU,MAAMK,qBAAqBf,KAAKW,MAAMV,cAE3CD,KAAKG,SAAS,CAACF,aAAc,OAMjCe,SACE,OACEnB,gBAACoB,GAAKC,UAAU,gEACdrB,gBAACsB,GAAUD,UAAU,8CAClBlB,KAAKU,MAAMU,SAASC,KAAI,CAACC,EAASC,IAE/B1B,uBACE2B,IAAK,GAAGxB,KAAKU,MAAMe,SAASF,IAC5BL,UAAU,kCAEVrB,uBAAKqB,UAAU,sEACbrB,qBAAGqB,UAAU,0BAA0BlB,KAAKU,MAAMe,QAEpD5B,gBAAC6B,GACCC,KAAM,GACG,IAAPJ,EAAWvB,KAAKU,MAAMU,SAAS,GAAKpB,KAAKU,MAAMU,SAAS,KAE1DQ,QACE5B,KAAKW,MAAMV,eACX,GACS,IAAPsB,EAAWvB,KAAKU,MAAMU,SAAS,GAAKpB,KAAKU,MAAMU,SAAS,KAG5Df,MAAO,GACE,IAAPkB,EAAWvB,KAAKU,MAAMU,SAAS,GAAKpB,KAAKU,MAAMU,SAAS,KAE1DS,SAAU7B,KAAK8B,UACfC,UAAW/B,KAAK8B,UAChBZ,UAAU,yDAEVrB,wBAAMqB,UAAU,yBAAyBI"}