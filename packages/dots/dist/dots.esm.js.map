{"version":3,"file":"dots.esm.js","sources":["../lib/Dot/index.tsx","../lib/DotHolder/index.tsx","../../../node_modules/style-inject/dist/style-inject.es.js","../lib/dots.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport interface IDotProps {\r\n  position: number\r\n}\r\n\r\nexport class Dot extends React.Component<IDotProps> {\r\n  public render() {\r\n    const positionClass = 'dot dot-position-' + this.props.position\r\n    return <div className={positionClass}></div>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport interface IDotHolderProps {\r\n  clickable?: boolean\r\n  position: number\r\n  updatePosition: (e: any, position: number) => void\r\n}\r\n\r\nexport default class DotHolder extends React.Component<IDotHolderProps> {\r\n  render() {\r\n    const dotHolderStyle = this.props.clickable\r\n      ? 'dot-holder dot-holder-clickable'\r\n      : 'dot-holder'\r\n    const position: number = this.props.position\r\n    return (\r\n      <div\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        data-testid=\"dot-holder\"\r\n        aria-label=\"dot-holder\"\r\n        className={dotHolderStyle}\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          this.props.updatePosition(e, position)\r\n        }}\r\n        onKeyPress={e => {\r\n          e.stopPropagation()\r\n          this.props.updatePosition(e, position)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\r\nimport {Dot} from './Dot'\r\nimport DotHolder from './DotHolder'\r\nimport './Dots.scss'\r\n\r\nexport interface ISliderTableProps {\r\n  position: number\r\n  size: 'small' | 'medium' | 'large'\r\n  clickable: boolean | any\r\n  length: number\r\n  positionChangeListener: (e: any, position: number) => void\r\n}\r\nexport interface stateType {\r\n  position: number\r\n}\r\n\r\nexport class SliderTable extends React.Component<ISliderTableProps> {\r\n  updatePosition = (e: any, position: number) => {\r\n    if (this.props.clickable) {\r\n      this.setState({position: position})\r\n      if (this.props.positionChangeListener) {\r\n        this.props.positionChangeListener(e, position)\r\n      }\r\n    }\r\n  }\r\n\r\n  generateDotHolders = () => {\r\n    const dotHolders = []\r\n    for (let i = 0; i < this.props.length; i++) {\r\n      dotHolders.push(\r\n        <DotHolder\r\n          key={i}\r\n          position={i}\r\n          clickable={this.props.clickable}\r\n          updatePosition={this.updatePosition}\r\n        />,\r\n      )\r\n    }\r\n    return dotHolders\r\n  }\r\n  componentDidUpdate(prevProps: any, _: any) {\r\n    if (this.props.position !== prevProps.position) {\r\n      //scroollbar move dots\r\n      this.setState({\r\n        position: this.props.position,\r\n      })\r\n    }\r\n  }\r\n\r\n  state: stateType = {position: this.props.position}\r\n  render() {\r\n    const dotHolders = this.generateDotHolders()\r\n    const sliderStyle = 'slider slider-' + this.props.size\r\n    return (\r\n      <div className={sliderStyle}>\r\n        <div className=\"dot-holders\">{dotHolders}</div>\r\n        <Dot position={this.state.position} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"names":["Dot","React","Component","render","positionClass","this","props","position","className","DotHolder","dotHolderStyle","clickable","role","tabIndex","onClick","e","stopPropagation","updatePosition","onKeyPress","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","SliderTable","constructor","setState","positionChangeListener","dotHolders","i","length","push","key","componentDidUpdate","prevProps","_","generateDotHolders","sliderStyle","size","state"],"mappings":"2BAMaA,UAAYC,EAAMC,UACtBC,SACL,MAAMC,EAAgB,oBAAsBC,KAAKC,MAAMC,SACvD,OAAON,uBAAKO,UAAWJ,WCDNK,UAAkBR,EAAMC,UAC3CC,SACE,MAAMO,EAAiBL,KAAKC,MAAMK,UAC9B,kCACA,aACEJ,EAAmBF,KAAKC,MAAMC,SACpC,OACEN,uBACEW,KAAK,SACLC,SAAU,gBACE,0BACD,aACXL,UAAWE,EACXI,QAASC,IACPA,EAAEC,kBACFX,KAAKC,MAAMW,eAAeF,EAAGR,IAE/BW,WAAYH,IACVA,EAAEC,kBACFX,KAAKC,MAAMW,eAAeF,EAAGR,QC3BvC,SAAqBY,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,0uGCPjCe,UAAoBjC,EAAMC,UAAvCiC,kCACE9B,oBAAiB,CAACU,EAAQR,KACpBF,KAAKC,MAAMK,YACbN,KAAK+B,SAAS,CAAC7B,SAAUA,IACrBF,KAAKC,MAAM+B,wBACbhC,KAAKC,MAAM+B,uBAAuBtB,EAAGR,KAK3CF,wBAAqB,KACnB,MAAMiC,EAAa,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIlC,KAAKC,MAAMkC,OAAQD,IACrCD,EAAWG,KACTxC,gBAACQ,GACCiC,IAAKH,EACLhC,SAAUgC,EACV5B,UAAWN,KAAKC,MAAMK,UACtBM,eAAgBZ,KAAKY,kBAI3B,OAAOqB,GAWTjC,WAAmB,CAACE,SAAUF,KAAKC,MAAMC,UATzCoC,mBAAmBC,EAAgBC,GAC7BxC,KAAKC,MAAMC,WAAaqC,EAAUrC,UAEpCF,KAAK+B,SAAS,CACZ7B,SAAUF,KAAKC,MAAMC,WAM3BJ,SACE,MAAMmC,EAAajC,KAAKyC,qBAClBC,EAAc,iBAAmB1C,KAAKC,MAAM0C,KAClD,OACE/C,uBAAKO,UAAWuC,GACd9C,uBAAKO,UAAU,eAAe8B,GAC9BrC,gBAACD,GAAIO,SAAUF,KAAK4C,MAAM1C"}