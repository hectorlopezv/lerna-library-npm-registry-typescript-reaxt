{"version":3,"file":"table.cjs.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../lib/PaginationPanel/LeftIcon.tsx","../lib/PaginationPanel/RightIcon.tsx","../lib/PaginationPanel/index.tsx","../../dots/lib/Dot/index.tsx","../../dots/lib/DotHolder/index.tsx","../../dots/lib/dots.tsx","../lib/srollUtils/scrolling.ts","../lib/table.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface LeftIconProps {\n  className?: string\n}\n\nconst LeftIcon: React.FC<LeftIconProps> = props => {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth={0}\n      viewBox=\"0 0 512 512\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm28.9-143.6L209.4 288H392c13.3 0 24-10.7 24-24v-16c0-13.3-10.7-24-24-24H209.4l75.5-72.4c9.7-9.3 9.9-24.8.4-34.3l-11-10.9c-9.4-9.4-24.6-9.4-33.9 0L107.7 239c-9.4 9.4-9.4 24.6 0 33.9l132.7 132.7c9.4 9.4 24.6 9.4 33.9 0l11-10.9c9.5-9.5 9.3-25-.4-34.3z\"\n        stroke=\"none\"\n      />\n    </svg>\n  )\n}\n\nexport default LeftIcon\n","import React from 'react'\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface RightIconProps {\n  className?: string\n}\n\nconst RightIcon: React.FC<RightIconProps> = props => {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth={0}\n      viewBox=\"0 0 512 512\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z\"\n        stroke=\"none\"\n      />\n    </svg>\n  )\n}\n\nexport default RightIcon\n","import React from 'react'\nimport './styles.scss'\n\nimport LeftIcon from './LeftIcon'\nimport RightIcon from './RightIcon'\nexport interface IPaginationPanelProps {\n  totalPages: number\n  currPage: number\n  changePage: (page: number) => void\n}\n\nexport class PaginationPanel extends React.Component<IPaginationPanelProps> {\n  render() {\n    return (\n      <div style={{padding: '15px'}}>\n        {this.props.totalPages > 0 ? (\n          <div className=\"paginador\">\n            <div\n              className={\n                this.props.currPage === 1\n                  ? 'paginadorArrowLeft inactive'\n                  : 'paginadorArrowLeft'\n              }\n              onClick={() =>\n                this.props.currPage !== 1\n                  ? this.props.changePage(this.props.currPage - 1)\n                  : null\n              }\n            >\n              <LeftIcon\n                className={\n                  this.props.currPage === 1\n                    ? 'paginadorArrowLeft inactive'\n                    : 'paginadorArrowLeft'\n                }\n              />\n            </div>\n            {this.props.totalPages > 1 ? (\n              <div className=\"contentPaginador\">\n                {this.props.currPage} de {this.props.totalPages} pag\n              </div>\n            ) : (\n              <div className=\"contentPaginador\">\n                {this.props.currPage} de 1 pag\n              </div>\n            )}\n\n            <div\n              className={\n                this.props.currPage === this.props.totalPages\n                  ? 'paginadorArrowright inactive'\n                  : 'paginadorArrowright'\n              }\n              onClick={() =>\n                this.props.currPage !== this.props.totalPages\n                  ? this.props.changePage(this.props.currPage + 1)\n                  : null\n              }\n            >\n              <RightIcon\n                className={\n                  this.props.currPage === this.props.totalPages\n                    ? 'paginadorArrowright inactive'\n                    : 'paginadorArrowright'\n                }\n              />\n            </div>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport interface IDotProps {\n  position: number\n}\n\nexport class Dot extends React.Component<IDotProps> {\n  public render() {\n    const positionClass = 'dot dot-position-' + this.props.position\n    return <div className={positionClass}></div>\n  }\n}\n","import React from 'react'\n\nexport interface IDotHolderProps {\n  clickable?: boolean\n  position: number\n  updatePosition: (e: any, position: number) => void\n}\n\nexport default class DotHolder extends React.Component<IDotHolderProps> {\n  render() {\n    const dotHolderStyle = this.props.clickable\n      ? 'dot-holder dot-holder-clickable'\n      : 'dot-holder'\n    const position: number = this.props.position\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        data-testid=\"dot-holder\"\n        aria-label=\"dot-holder\"\n        className={dotHolderStyle}\n        onClick={e => {\n          e.stopPropagation()\n          this.props.updatePosition(e, position)\n        }}\n        onKeyPress={e => {\n          e.stopPropagation()\n          this.props.updatePosition(e, position)\n        }}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport {Dot} from './Dot'\nimport DotHolder from './DotHolder'\nimport './Dots.scss'\n\nexport interface ISliderTableProps {\n  position: number\n  size: 'small' | 'medium' | 'large'\n  clickable: boolean | any\n  length: number\n  positionChangeListener: (e: any, position: number) => void\n}\nexport interface stateType {\n  position: number\n}\n\nexport class SliderTable extends React.Component<ISliderTableProps> {\n  updatePosition = (e: any, position: number) => {\n    if (this.props.clickable) {\n      this.setState({position: position})\n      if (this.props.positionChangeListener) {\n        this.props.positionChangeListener(e, position)\n      }\n    }\n  }\n\n  generateDotHolders = () => {\n    const dotHolders = []\n    for (let i = 0; i < this.props.length; i++) {\n      dotHolders.push(\n        <DotHolder\n          key={i}\n          position={i}\n          clickable={this.props.clickable}\n          updatePosition={this.updatePosition}\n        />,\n      )\n    }\n    return dotHolders\n  }\n  componentDidUpdate(prevProps: any, _: any) {\n    if (this.props.position !== prevProps.position) {\n      //scroollbar move dots\n      this.setState({\n        position: this.props.position,\n      })\n    }\n  }\n\n  state: stateType = {position: this.props.position}\n  render() {\n    const dotHolders = this.generateDotHolders()\n    const sliderStyle = 'slider slider-' + this.props.size\n    return (\n      <div className={sliderStyle}>\n        <div className=\"dot-holders\">{dotHolders}</div>\n        <Dot position={this.state.position} />\n      </div>\n    )\n  }\n}\n","import {elementScrollBy, elementScrollIntoView} from 'seamless-scroll-polyfill'\n\nexport function setMyInputRef(context: any, element: HTMLElement | null): void {\n  context.myInput = element\n}\n\nexport function focusMyInput(\n  myInput: HTMLElement | null,\n  offset: number | string,\n  block: 'center' | 'end' | 'nearest' | 'start' = 'center',\n): void {\n  let pos, top\n\n  if (myInput) {\n    pos = myInput.style.position\n    top = myInput.style.top\n\n    myInput.style.position = 'relative'\n    myInput.style.top = `${offset}px`\n    elementScrollIntoView(myInput, {behavior: 'smooth', block: block})\n    myInput.style.top = top\n    myInput.style.position = pos\n  }\n}\n\nexport function scrollhorizontal(\n  element: HTMLElement,\n  top: number,\n  left: number,\n  behavior: 'auto' | 'smooth' = 'smooth',\n): void {\n  elementScrollBy(element, {\n    top: top,\n    left: left,\n    behavior: behavior,\n  })\n}\n","import React from 'react'\n\nimport {PaginationPanel} from './PaginationPanel'\nimport {SliderTable} from '@libprov/dots'\n\nimport SimpleBar from 'simplebar' // or \"import SimpleBar from 'simplebar';\" if you want to use it manually.\nimport 'simplebar/dist/simplebar.css'\n\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\nimport {\n  focusMyInput,\n  setMyInputRef,\n  scrollhorizontal,\n} from './srollUtils/scrolling'\nimport './styles.scss'\nimport debounce from 'lodash.debounce'\nexport interface fieldType {\n  csvformater?: boolean\n  formater?: boolean\n  dataField: string\n  width: string\n  title: string\n}\n\nexport interface ITableProps {\n  titleCssOverflowContainer: string\n  filename: string\n  displayBtnDescarga: boolean\n  showTitle?: boolean\n  identificator?: string\n  isMobile: boolean\n  overFlowTable: boolean\n  titleTable: string\n  data: any\n  fields: fieldType[]\n  preventScroll: undefined | boolean | null\n  toright: any\n  changePage: (page: number) => void\n  estadoFormater: any //(cell, row, formatExtraData, rowIdx)=> null , string jsx.element\n  csvformater: any //(cell, row)=> string | null\n}\nexport interface stateTypes {\n  prevScrollBarPosition: number\n  percentageScroll: number\n  overflowMount: boolean\n}\n\nexport class Table extends React.Component<ITableProps> {\n  onPageChange = (page: number, _: number) => {\n    setTimeout(() => {\n      if (\n        this.props.changePage != null &&\n        this.props.changePage !== undefined\n      ) {\n        this.props.changePage(page)\n      }\n      this.setState(\n        {\n          prevScrollBarPosition: 0,\n        },\n        () => {\n          this.previousPosition = 0\n          const scrollElement = this.simplebar.getScrollElement()\n          const scrollLeftMax =\n            scrollElement.scrollWidth - scrollElement.offsetWidth\n          const endPoint = scrollLeftMax\n          scrollhorizontal(scrollElement, 0, -endPoint)\n          if (this.props.toright === null || this.props.toright === undefined)\n            focusMyInput(this.myInput, -180, 'start')\n        },\n      )\n    }, 50)\n  }\n\n  slideMyTable = (e: any, position: number | string) => {\n    //moving with Dots\n\n    e.stopPropagation()\n\n    const scrollElement = this.simplebar.getScrollElement()\n\n    const scrollLeftMax = scrollElement.scrollWidth - scrollElement.offsetWidth\n\n    const midPoint = Math.trunc(scrollLeftMax / 2)\n    const endPoint = scrollLeftMax\n\n    if (this.simplebar) {\n      switch (position) {\n        case 0:\n          scrollhorizontal(scrollElement, 0, -endPoint)\n          this.previousPosition = position\n          break\n        case 1:\n          if (this.previousPosition !== null && this.previousPosition === 2) {\n            scrollhorizontal(scrollElement, 0, -midPoint)\n          } else {\n            scrollhorizontal(scrollElement, 0, midPoint)\n          }\n          this.previousPosition = position\n          break\n        case 2:\n          scrollhorizontal(scrollElement, 0, endPoint)\n          this.previousPosition = position\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  changeDotPosition = debounce((e: any) => {\n    //moving with scrollbar\n\n    const scrollLeft = e.srcElement.scrollLeft\n\n    const scrollLeftMax = e.srcElement.scrollWidth - e.srcElement.offsetWidth\n\n    const percentageScroll = scrollLeft / scrollLeftMax\n\n    if (percentageScroll >= 0 && percentageScroll <= 0.28) {\n      this.setState({\n        prevScrollBarPosition: 0,\n      })\n    }\n\n    if (percentageScroll > 0.28 && percentageScroll <= 0.69) {\n      this.setState({\n        prevScrollBarPosition: 1,\n      })\n    }\n    if (percentageScroll > 0.69) {\n      this.setState({\n        prevScrollBarPosition: 2,\n      })\n    }\n  }, 300)\n\n  componentDidMount() {\n    this.MyTableContainer = document.querySelector(\n      `.${this.props.identificator} .react-bs-table.react-bs-table-bordered`,\n    )\n    let hide = false\n\n    if (this.props.isMobile === true) {\n      hide = true\n    }\n    if (this.MyTableContainer !== undefined && this.MyTableContainer !== null) {\n      this.simplebar = new SimpleBar(this.MyTableContainer, {autoHide: hide})\n      if (\n        this.simplebar !== null &&\n        this.simplebar !== undefined &&\n        this.simplebar.getScrollElement() !== undefined\n      )\n        this.simplebar\n          .getScrollElement()\n          .addEventListener('scroll', this.changeDotPosition)\n    }\n\n    const overflowMount = this.isOverflown(\n      document.querySelector(this.props.titleCssOverflowContainer),\n    )\n    this.setState({overflowMount})\n  }\n\n  componentWillUnmount() {\n    this.simplebar.unMount()\n    this.simplebar = null\n    this.MyTableContainer = null\n    window.removeEventListener('scroll', this.changeDotPosition)\n  }\n\n  componentDidUpdate(prevProps: any, _: any) {\n    if (this.props.data !== prevProps.data) {\n      setTimeout(() => {\n        this.setState(\n          {\n            prevScrollBarPosition: 0,\n          },\n          () => {\n            this.previousPosition = 0\n            const scrollElement = this.simplebar.getScrollElement()\n            const scrollLeftMax =\n              scrollElement.scrollWidth - scrollElement.offsetWidth\n            const endPoint = scrollLeftMax\n            if (\n              this.props.preventScroll === null ||\n              this.props.preventScroll === undefined ||\n              this.props.preventScroll === false\n            ) {\n              scrollhorizontal(scrollElement, 0, -endPoint)\n            }\n          },\n        )\n      }, 50)\n    }\n  }\n\n  renderPaginationPanel = (props: any) => {\n    return <PaginationPanel {...props} />\n  }\n  isOverflown = (element: HTMLElement | null) => {\n    if (element === null) return false\n    return (\n      element.scrollHeight > element.clientHeight ||\n      element.scrollWidth > element.clientWidth\n    )\n  }\n  createCustomExportCSVButton = () => {\n    if (this.props.isMobile === false) {\n      return <div style={{display: 'none'}}></div>\n    }\n    const displayToolBar =\n      (this.props.isMobile && this.props.overFlowTable) ||\n      (this.props.isMobile && this.state.overflowMount)\n    return (\n      <div\n        className={`${\n          displayToolBar ? 'redprestadores__btn' : 'display__none'\n        }`}\n      >\n        {displayToolBar && (\n          <div className=\"DotsContainer\">\n            <SliderTable\n              length={3}\n              size={'small'}\n              position={this.state.prevScrollBarPosition}\n              clickable\n              positionChangeListener={this.slideMyTable}\n            />\n          </div>\n        )}\n      </div>\n    )\n  }\n  //\n  simplebar: HTMLElement | any = null\n  pagination = false\n  previousPosition: number | null = null\n  MyTableContainer: HTMLElement | null = null\n  myInput: HTMLElement | null = null\n  overflowMount = false\n  optsDesktop = {\n    clearSearch: true,\n    noDataText: 'No hay datos Disponibles',\n    pageDropDown: false,\n    sizePerPage: 10,\n    withoutNoDataText: true,\n    pageStartIndex: 1,\n    hideSizePerPage: true,\n    alwaysShowAllBtns: true,\n    hidePageListOnlyOnePage: true,\n    exportCSVText: 'Descargar',\n    onPageChange: this.onPageChange,\n    exportCSVBtn: this.createCustomExportCSVButton,\n    paginationPanel: this.renderPaginationPanel,\n  }\n  state: stateTypes = {\n    prevScrollBarPosition: 0,\n    percentageScroll: 0,\n    overflowMount: false,\n  }\n  public static defaultProps: {\n    isMobile: false\n    displayBtnDescarga: true\n    filename: ''\n    showTitle: true\n    titleCssOverflowContainer: 'div.react-bs-table-container div.react-bs-table.react-bs-table-bordered div.simplebar-wrapper div.simplebar-mask div.simplebar-offset div.simplebar-content-wrapper'\n  }\n  public render() {\n    return (\n      <div\n        className={`tableContainer ${this.props.identificator}`}\n        ref={ele => setMyInputRef(this, ele)}\n      >\n        {this.props.showTitle && (\n          <p className=\"tableContainer__Title\">{this.props.titleTable}</p>\n        )}\n        <BootstrapTable\n          data={this.props.data}\n          options={this.optsDesktop}\n          pagination\n          exportCSV={this.props.displayBtnDescarga}\n          ignoreSinglePage\n          scrollTop={'Bottom'}\n          csvFileName={this.props.filename}\n        >\n          {this.props.fields.map((el, id) => {\n            if (el.formater && el.csvformater) {\n              if (id === 0) {\n                return (\n                  <TableHeaderColumn\n                    isKey={true}\n                    key={`Table_${id}`}\n                    dataField={el.dataField}\n                    width={el.width}\n                    dataFormat={this.props.estadoFormater}\n                    csvFormat={this.props.csvformater}\n                  >\n                    {el.title}\n                  </TableHeaderColumn>\n                )\n              }\n\n              return (\n                <TableHeaderColumn\n                  key={`Table_${id}`}\n                  dataField={el.dataField}\n                  width={el.width}\n                  dataFormat={this.props.estadoFormater}\n                  csvFormat={this.props.csvformater}\n                >\n                  {el.title}\n                </TableHeaderColumn>\n              )\n            } else if (el.formater) {\n              if (id === 0) {\n                return (\n                  <TableHeaderColumn\n                    isKey={true}\n                    key={`Table_${id}`}\n                    dataField={el.dataField}\n                    width={el.width}\n                    dataFormat={this.props.estadoFormater}\n                  >\n                    {el.title}\n                  </TableHeaderColumn>\n                )\n              }\n\n              return (\n                <TableHeaderColumn\n                  key={`Table_${id}`}\n                  dataField={el.dataField}\n                  width={el.width}\n                  dataFormat={this.props.estadoFormater}\n                >\n                  {el.title}\n                </TableHeaderColumn>\n              )\n            } else if (el.csvformater) {\n              if (id === 0) {\n                return (\n                  <TableHeaderColumn\n                    isKey={true}\n                    key={`Table_${id}`}\n                    dataField={el.dataField}\n                    width={el.width}\n                    csvFormat={this.props.csvformater}\n                  >\n                    {el.title}\n                  </TableHeaderColumn>\n                )\n              }\n\n              return (\n                <TableHeaderColumn\n                  key={`Table_${id}`}\n                  dataField={el.dataField}\n                  width={el.width}\n                  csvFormat={this.props.csvformater}\n                >\n                  {el.title}\n                </TableHeaderColumn>\n              )\n            } else {\n              if (id === 0) {\n                return (\n                  <TableHeaderColumn\n                    isKey={true}\n                    key={`Table_${id}`}\n                    dataField={el.dataField}\n                    width={el.width}\n                  >\n                    {el.title}\n                  </TableHeaderColumn>\n                )\n              }\n              return (\n                <TableHeaderColumn\n                  key={`Table_${id}`}\n                  dataField={el.dataField}\n                  width={el.width}\n                >\n                  {el.title}\n                </TableHeaderColumn>\n              )\n            }\n          })}\n        </BootstrapTable>\n      </div>\n    )\n  }\n}\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","LeftIcon","props","React","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","RightIcon","PaginationPanel","Component","render","padding","this","totalPages","className","currPage","onClick","changePage","Dot","positionClass","position","DotHolder","dotHolderStyle","clickable","role","tabIndex","e","stopPropagation","updatePosition","onKeyPress","SliderTable","constructor","setState","positionChangeListener","dotHolders","i","length","push","key","componentDidUpdate","prevProps","_","generateDotHolders","sliderStyle","size","state","scrollhorizontal","element","top","left","behavior","elementScrollBy","Table","page","setTimeout","undefined","prevScrollBarPosition","previousPosition","scrollElement","simplebar","getScrollElement","scrollWidth","offsetWidth","toright","myInput","offset","block","pos","elementScrollIntoView","focusMyInput","scrollLeftMax","midPoint","Math","trunc","endPoint","debounce","percentageScroll","srcElement","scrollLeft","scrollHeight","clientHeight","clientWidth","isMobile","display","displayToolBar","overFlowTable","overflowMount","slideMyTable","clearSearch","noDataText","pageDropDown","sizePerPage","withoutNoDataText","pageStartIndex","hideSizePerPage","alwaysShowAllBtns","hidePageListOnlyOnePage","exportCSVText","onPageChange","exportCSVBtn","createCustomExportCSVButton","paginationPanel","renderPaginationPanel","componentDidMount","MyTableContainer","querySelector","identificator","hide","SimpleBar","autoHide","addEventListener","changeDotPosition","isOverflown","titleCssOverflowContainer","componentWillUnmount","unMount","window","removeEventListener","data","preventScroll","ele","setMyInputRef","showTitle","titleTable","BootstrapTable","options","optsDesktop","pagination","exportCSV","displayBtnDescarga","ignoreSinglePage","scrollTop","csvFileName","filename","fields","map","el","id","formater","csvformater","TableHeaderColumn","isKey","dataField","dataFormat","estadoFormater","csvFormat","title"],"mappings":"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"}