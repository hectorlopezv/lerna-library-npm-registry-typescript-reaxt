{"version":3,"file":"labelvalue.cjs.js","sources":["../lib/LabelValueItem/index.tsx","../../../node_modules/style-inject/dist/style-inject.es.js","../lib/labelvalue.tsx"],"sourcesContent":["import React from 'react'\nexport interface LabelValueItemProps {\n  styles: string\n  styleSpan: string\n  styleValue: string | null\n  item: any\n  id?: string\n}\n\nexport const LabelValueItem: React.SFC<LabelValueItemProps> = ({\n  styles,\n  item,\n  styleSpan,\n  styleValue,\n}) => {\n  return (\n    <div className={styles}>\n      {item.label !== '' ? (\n        <>\n          <div className={styleSpan}>{item.label}</div>\n          {styleValue !== null && styleValue !== undefined ? (\n            <div className={styleValue}>{item.value}</div>\n          ) : (\n            <> {item.value}</>\n          )}\n        </>\n      ) : (\n        <br className=\"d-none d-md-block\" />\n      )}\n    </div>\n  )\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\nimport React from 'react'\nimport {LabelValueItem} from './LabelValueItem'\nimport './styles.scss'\nexport interface LabelValueProps {\n  subColumns: boolean\n  stylesColumn: string\n  dataColumn: any\n}\n\nexport const LabelValue: React.FC<LabelValueProps> = ({\n  stylesColumn,\n  dataColumn,\n  subColumns,\n}) => {\n  return (\n    <div className=\"labelValue\">\n      <div className=\"row col-sm-12 p-0\">\n        {dataColumn.map((item: any, index: number) => {\n          return (\n            <div\n              className={stylesColumn}\n              aria-describedby={`${index}_${item.value}`}\n              tabIndex={0}\n            >\n              <LabelValueItem\n                key={`labelValueItem_${index}`}\n                id={`${index}_${item.value}`}\n                item={item}\n                styles=\"col-sm-12 p-0\"\n                styleSpan={`${\n                  subColumns === true ? 'col-sm-6' : ''\n                } labelValue__label`}\n                styleValue={subColumns === true ? 'col-sm-6' : null}\n              />\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n"],"names":["LabelValueItem","styles","item","styleSpan","styleValue","React","className","label","value","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","stylesColumn","dataColumn","subColumns","map","index","tabIndex","key","id"],"mappings":"sKASO,MAAMA,EAAiD,EAC5DC,OAAAA,EACAC,KAAAA,EACAC,UAAAA,EACAC,WAAAA,KAGEC,+BAAKC,UAAWL,GACE,KAAfC,EAAKK,MACJF,gDACEA,+BAAKC,UAAWH,GAAYD,EAAKK,OAChCH,MAAAA,EACCC,+BAAKC,UAAWF,GAAaF,EAAKM,OAElCH,oDAAIH,EAAKM,QAIbH,8BAAIC,UAAU,wBC3BtB,SAAqBG,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,0cCbO,EACnDe,aAAAA,EACAC,WAAAA,EACAC,WAAAA,KAGErB,+BAAKC,UAAU,cACbD,+BAAKC,UAAU,qBACZmB,EAAWE,KAAI,CAACzB,EAAW0B,IAExBvB,+BACEC,UAAWkB,qBACO,GAAGI,KAAS1B,EAAKM,QACnCqB,SAAU,GAEVxB,wBAACL,GACC8B,IAAK,kBAAkBF,IACvBG,GAAI,GAAGH,KAAS1B,EAAKM,QACrBN,KAAMA,EACND,OAAO,gBACPE,YACiB,IAAfuB,EAAsB,WAAa,IAD1B,qBAGXtB,YAA2B,IAAfsB,EAAsB,WAAa"}