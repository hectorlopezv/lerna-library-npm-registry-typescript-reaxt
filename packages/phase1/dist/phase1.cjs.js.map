{"version":3,"file":"phase1.cjs.js","sources":["../lib/styles.tsx","../lib/phase1.tsx"],"sourcesContent":["import styled, {css} from 'styled-components'\ninterface typeContainer {\n  phase: number\n}\nexport const Container = styled.div<typeContainer>`\n  &&&& {\n    margin: 20px 0px 0px;\n    background: #fff 0% 0% no-repeat padding-box;\n    border: 1px solid #f60;\n    border-radius: 10px;\n    min-height: 200px;\n    position: relative;\n    border-color: #ccc;\n    ${({phase}) => (phase === 2 ? 'border-color: #ccc' : 'border-color: #f60')}\n  }\n  padding-top: 30px;\n`\ninterface numberContaineProps {\n  'data-testid': string\n  tabIndex: number\n  'aria-label': string\n}\nexport const NumberContainer = styled.div.attrs<numberContaineProps>(prop => ({\n  tabindex: prop.tabIndex,\n  'data-testid': prop['data-testid'],\n  'aria-label': prop['aria-label'],\n}))`\n  position: relative;\n  display: block;\n  min-height: 1px;\n  padding: 1px;\n`\ninterface digitTypes {\n  phase: number\n}\nexport const Digit = styled.span<digitTypes>`\n  border: none;\n  background: #f60;\n  line-height: 73px;\n  color: #fff;\n  position: absolute;\n  top: -36.5px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 73px;\n  height: 73px;\n  display: block;\n\n  border: 1px solid #f4f4f4;\n  text-align: center;\n  line-height: 73px;\n  font-size: 36px;\n  font-family: 'Roboto Bold';\n  border-radius: 100%;\n\n  ${({phase}) => {\n    if (phase === 2) {\n      return css`\n        border: none;\n        background: #81ba00;\n        line-height: 73px;\n        color: #fff;\n        font-size: 0%;\n        &::before {\n          font-family: 'FontAwesome';\n          content: '\\f00c';\n          font-size: 40px;\n        }\n      `\n    }\n    return css``\n  }}\n\n  @media screen and (device-width: 767px) {\n    top: -67.5px;\n  }\n  @media screen and (max-width: 767px) {\n    top: -67.5px;\n    transform: translateX(-59%);\n  }\n  @media screen and (min-width: 768px) {\n    top: 15px;\n    left: -36.5px;\n    transform: translateX(0);\n  }\n`\n","import React from 'react'\nimport {Container, NumberContainer, Digit} from './styles'\nexport interface Phase1_SCProps {\n  phase: number\n  className?: string\n  setRef?: (node: HTMLElement | null | undefined) => any\n}\n\nexport const Phase1: React.FC<Phase1_SCProps> = ({\n  setRef,\n  children,\n  phase = 1,\n  className,\n}) => {\n  return (\n    <Container phase={phase} ref={setRef} className={className}>\n      <NumberContainer\n        data-testid={`phase-1`}\n        tabIndex={0}\n        aria-label={`the phase of the container is 1 and the actual phase is ${phase}`}\n      >\n        <Digit phase={phase}>1</Digit>\n      </NumberContainer>\n      {children}\n    </Container>\n  )\n}\n"],"names":["Container","styled","div","phase","NumberContainer","attrs","prop","tabindex","tabIndex","Digit","span","css","setRef","children","className","React","ref"],"mappings":"oNAIO,MAAMA,EAAYC,UAAOC,GAAkB;;;;;;;;;MAS5C,EAAEC,MAAAA,KAAsB,IAAVA,EAAc,qBAAuB;;;EAS5CC,EAAkBH,UAAOC,IAAIG,OAA2BC,KACnEC,SAAUD,EAAKE,SACf,cAAeF,EAAK,eACpB,aAAcA,EAAK,iBAClB;;;;;EASUG,EAAQR,UAAOS,IAAgB;;;;;;;;;;;;;;;;;;;;IAoBxC,EAAEP,MAAAA,KACY,IAAVA,EACKQ,KAAG;;;;;;;;;;;QAaLA,KAAG;;;;;;;;;;;;;;iBC9DkC,EAC9CC,OAAAA,EACAC,SAAAA,EACAV,MAAAA,EAAQ,EACRW,UAAAA,KAGEC,wBAACf,GAAUG,MAAOA,EAAOa,IAAKJ,EAAQE,UAAWA,GAC/CC,wBAACX,iBACc,UACbI,SAAU,eACE,2DAA2DL,KAEvEY,wBAACN,GAAMN,MAAOA,SAEfU"}