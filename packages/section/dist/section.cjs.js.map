{"version":3,"file":"section.cjs.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../lib/styles.tsx","../lib/section.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  margin: 0 15px;\n  position: relative;\n`\nexport const MainTitle = styled.h1`\n  &&&& {\n    text-align: left;\n    font: normal normal bold 36px Roboto bold !important;\n    @media screen and (device-width: 767px) {\n      margin-bottom: 50px;\n      text-align: center;\n      font: normal normal bold 31px Roboto bold !important;\n    }\n    @media screen and (max-width: 767px) {\n      margin-bottom: 78px;\n      text-align: center;\n      font: normal normal bold 31px Roboto bold !important;\n    }\n  }\n`\n\nexport const SubTitle = styled.h3`\n  &&& {\n    text-align: left;\n    font: normal normal 300 16px Roboto;\n    letter-spacing: 0px;\n    color: #999;\n    margin-top: 19px;\n    margin-bottom: 30px;\n    @media screen and (max-width: 601px) {\n      margin-bottom: 77px;\n    }\n\n    @media screen and (max-width: 767px) {\n      margin-bottom: 55px;\n    }\n  }\n`\n\nexport const Section = styled.section``\n","import React from 'react'\nimport './styles.scss'\nimport {MainTitle, Section as SectionContainer} from './styles'\nexport interface Section_SCProps {\n  setRef?: (\n    node: HTMLElement | null | undefined,\n  ) => HTMLElement | null | undefined\n  subTitle?: () => JSX.Element\n  titleContainer: string\n  className?: string\n}\n\nexport const Section: React.FC<Section_SCProps> = ({\n  titleContainer,\n\n  className = '',\n  subTitle = null,\n  setRef = null,\n  children,\n}) => {\n  return (\n    <div ref={setRef} id=\"section__container\" className={className}>\n      <MainTitle>{titleContainer}</MainTitle>\n      {subTitle && subTitle()}\n      <SectionContainer>{children}</SectionContainer>\n    </div>\n  )\n}\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styled","div","MainTitle","h1","h3","Section","section","titleContainer","className","subTitle","setRef","children","React","id","SectionContainer"],"mappings":"qNAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,gGCrBrBe,UAAOC,GAAG;;;EAI5B,MAAMC,EAAYF,UAAOG,EAAE;;;;;;;;;;;;;;;EAiBVH,UAAOI,EAAE;;;;;;;;;;;;;;;;EAkB1B,MAAMC,EAAUL,UAAOM,OAAO,mBC7Ba,EAChDC,eAAAA,EAEAC,UAAAA,EAAY,GACZC,SAAAA,EAAW,KACXC,OAAAA,EAAS,KACTC,SAAAA,KAGEC,+BAAK1B,IAAKwB,EAAQG,GAAG,qBAAqBL,UAAWA,GACnDI,wBAACV,OAAWK,GACXE,GAAYA,IACbG,wBAACE,OAAkBH"}