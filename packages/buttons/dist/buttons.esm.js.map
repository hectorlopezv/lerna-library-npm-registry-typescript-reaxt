{"version":3,"file":"buttons.esm.js","sources":["../lib/styles.tsx","../lib/buttons.tsx"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  border-top: 1px dashed #ccc;\r\n  padding-top: 2em;\r\n  padding-bottom: 2em;\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-top: 25px;\r\n  @media screen and (max-width: 767px) {\r\n    flex-flow: column-reverse nowrap;\r\n    align-items: center;\r\n    padding-bottom: 1.5em;\r\n    padding-top: 2.3em;\r\n    margin-top: 50px;\r\n  }\r\n`\r\n\r\nexport const Limpiar = styled.input`\r\n  &&& {\r\n    font: normal normal 300 14px/16px Roboto;\r\n    text-align: center;\r\n    background-color: transparent;\r\n    color: #ff6600ba;\r\n    text-transform: uppercase;\r\n    padding: 5px 10px;\r\n    text-align: center;\r\n    border: none;\r\n    @media screen and (max-width: 767px) {\r\n      margin-left: 0px;\r\n    }\r\n\r\n    &:disabled {\r\n      background: transparent;\r\n      border: none;\r\n      color: #7779;\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Generate = styled.input`\r\n  &&& {\r\n    transition: background-color 0.2s ease-out;\r\n    padding: 10px 14px 11px 14px;\r\n    font: normal normal bold 14px/16px Roboto;\r\n    letter-spacing: 0px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    background-color: #f60;\r\n    border-color: transparent;\r\n    color: #fff;\r\n\r\n    &:disabled {\r\n      opacity: 1;\r\n      color: #999;\r\n      background-color: #e5e5e5;\r\n      border: solid 1px #ccc;\r\n      cursor: not-allowed;\r\n      &:hover {\r\n        background-color: #e5e5e5;\r\n      }\r\n    }\r\n    &:hover {\r\n      background: #777;\r\n    }\r\n    @media screen and (min-width: 359px) {\r\n      margin-bottom: 12px;\r\n    }\r\n  }\r\n`\r\n","import {Container, Limpiar, Generate} from './styles'\r\nimport React from 'react'\r\n\r\nexport interface Buttons_SCProps {\r\n  className?: string\r\n  show: [boolean, boolean]\r\n  disableMessage?: boolean\r\n  cleanMessage?: string\r\n  handleCancel?: (...args: any[]) => any\r\n  generateMessage?: string\r\n  disableGenerate?: boolean\r\n  querySickLeaves?: (...args: any[]) => any\r\n}\r\n\r\nexport const Buttons: React.FC<Buttons_SCProps> = ({\r\n  className,\r\n\r\n  show,\r\n  disableMessage,\r\n  cleanMessage,\r\n  handleCancel,\r\n  generateMessage,\r\n  disableGenerate,\r\n  querySickLeaves,\r\n}) => {\r\n  return (\r\n    <Container className={className}>\r\n      {show[0] === true && (\r\n        <Limpiar\r\n          type=\"button\"\r\n          disabled={disableMessage}\r\n          value={cleanMessage}\r\n          onClick={handleCancel}\r\n          aria-label=\"cleaning function\"\r\n          data-testid=\"clean\"\r\n        />\r\n      )}\r\n\r\n      {show[1] === true && (\r\n        <Generate\r\n          type=\"button\"\r\n          value={generateMessage}\r\n          disabled={disableGenerate}\r\n          onClick={querySickLeaves}\r\n          aria-label=\"generate function\"\r\n          data-testid=\"generate\"\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n"],"names":["Container","styled","div","Limpiar","input","Generate","Buttons","className","show","disableMessage","cleanMessage","handleCancel","generateMessage","disableGenerate","querySickLeaves","React","type","disabled","value","onClick"],"mappings":"sDAEO,MAAMA,EAAYC,EAAOC,GAAG;;;;;;;;;;;;;;;;EAkBtBC,EAAUF,EAAOG,KAAK;;;;;;;;;;;;;;;;;;;;;EAuBtBC,EAAWJ,EAAOG,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EC7BvBE,EAAqC,EAChDC,UAAAA,EAEAC,KAAAA,EACAC,eAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,gBAAAA,EACAC,gBAAAA,EACAC,gBAAAA,KAGEC,gBAACf,GAAUO,UAAWA,IACP,IAAZC,EAAK,IACJO,gBAACZ,GACCa,KAAK,SACLC,SAAUR,EACVS,MAAOR,EACPS,QAASR,eACE,kCACC,WAIH,IAAZH,EAAK,IACJO,gBAACV,GACCW,KAAK,SACLE,MAAON,EACPK,SAAUJ,EACVM,QAASL,eACE,kCACC"}