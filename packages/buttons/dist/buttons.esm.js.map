{"version":3,"file":"buttons.esm.js","sources":["../lib/styles.tsx","../lib/buttons.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n  border-top: 1px dashed #ccc;\n  padding-top: 2em;\n  padding-bottom: 2em;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  width: 100%;\n  margin-top: 25px;\n  @media screen and (max-width: 767px) {\n    flex-flow: column-reverse nowrap;\n    align-items: center;\n    padding-bottom: 1.5em;\n    padding-top: 2.3em;\n    margin-top: 50px;\n  }\n`\n\nexport const Limpiar = styled.input`\n  &&& {\n    font: normal normal 300 14px/16px Roboto;\n    text-align: center;\n    background-color: transparent;\n    color: #ff6600ba;\n    text-transform: uppercase;\n    padding: 5px 10px;\n    text-align: center;\n    border: none;\n    @media screen and (max-width: 767px) {\n      margin-left: 0px;\n    }\n\n    &:disabled {\n      background: transparent;\n      border: none;\n      color: #7779;\n      cursor: not-allowed;\n    }\n  }\n`\n\nexport const Generate = styled.input`\n  &&& {\n    transition: background-color 0.2s ease-out;\n    padding: 10px 14px 11px 14px;\n    font: normal normal bold 14px/16px Roboto;\n    letter-spacing: 0px;\n    border-radius: 5px;\n    text-align: center;\n    background-color: #f60;\n    border-color: transparent;\n    color: #fff;\n\n    &:disabled {\n      opacity: 1;\n      color: #999;\n      background-color: #e5e5e5;\n      border: solid 1px #ccc;\n      cursor: not-allowed;\n      &:hover {\n        background-color: #e5e5e5;\n      }\n    }\n    &:hover {\n      background: #777;\n    }\n    @media screen and (min-width: 359px) {\n      margin-bottom: 12px;\n    }\n  }\n`\n","import {Container, Limpiar, Generate} from './styles'\nimport React from 'react'\n\nexport interface Buttons_SCProps {\n  className?: string\n  show: [boolean, boolean]\n  disableMessage?: boolean\n  cleanMessage?: string\n  handleCancel?: (...args: any[]) => any\n  generateMessage?: string\n  disableGenerate?: boolean\n  querySickLeaves?: (...args: any[]) => any\n}\n\nexport const Buttons: React.FC<Buttons_SCProps> = ({\n  className,\n\n  show,\n  disableMessage,\n  cleanMessage,\n  handleCancel,\n  generateMessage,\n  disableGenerate,\n  querySickLeaves,\n}) => {\n  return (\n    <Container className={className}>\n      {show[0] === true && (\n        <Limpiar\n          type=\"button\"\n          disabled={disableMessage}\n          value={cleanMessage}\n          onClick={handleCancel}\n          aria-label=\"cleaning function\"\n          data-testid=\"clean\"\n        />\n      )}\n\n      {show[1] === true && (\n        <Generate\n          type=\"button\"\n          value={generateMessage}\n          disabled={disableGenerate}\n          onClick={querySickLeaves}\n          aria-label=\"generate function\"\n          data-testid=\"generate\"\n        />\n      )}\n    </Container>\n  )\n}\n"],"names":["Container","styled","div","Limpiar","input","Generate","Buttons","className","show","disableMessage","cleanMessage","handleCancel","generateMessage","disableGenerate","querySickLeaves","React","type","disabled","value","onClick"],"mappings":"sDAEO,MAAMA,EAAYC,EAAOC,GAAG;;;;;;;;;;;;;;;;EAkBtBC,EAAUF,EAAOG,KAAK;;;;;;;;;;;;;;;;;;;;;EAuBtBC,EAAWJ,EAAOG,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EC7BvBE,EAAqC,EAChDC,UAAAA,EAEAC,KAAAA,EACAC,eAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,gBAAAA,EACAC,gBAAAA,EACAC,gBAAAA,KAGEC,gBAACf,GAAUO,UAAWA,IACP,IAAZC,EAAK,IACJO,gBAACZ,GACCa,KAAK,SACLC,SAAUR,EACVS,MAAOR,EACPS,QAASR,eACE,kCACC,WAIH,IAAZH,EAAK,IACJO,gBAACV,GACCW,KAAK,SACLE,MAAON,EACPK,SAAUJ,EACVM,QAASL,eACE,kCACC"}