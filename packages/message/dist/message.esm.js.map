{"version":3,"file":"message.esm.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../lib/message.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react' //llamado para creacion de componentes\nimport {Modal, Button} from 'react-bootstrap' //llamado para creacion de componentes de Bootstrap\nimport './styles.scss'\n\nexport interface IModalMessageProps {\n  show: boolean\n  showModal?: boolean\n  container?: any //this\n  MessageTitle: string\n  icStyles?: string\n  IconoColor?: string\n  Icono: JSX.Element\n  buttonsZone?: JSX.Element\n  msg: string\n  MainButtonText: string\n  buttonsZoneStyle?: any\n  getModalData?: (...args: any[]) => any\n  CloseAction: (...args: any[]) => any\n  AltButtonAction?: (...args: any[]) => any\n  MainButtonAction?: (...args: any[]) => any\n}\nexport interface stateTyp {\n  showModal: boolean\n}\nexport class ModalMessage extends React.Component<IModalMessageProps> {\n  state: stateTyp = {\n    showModal: false,\n  }\n  handleHide(e: any, callback?: (...args: any[]) => any) {\n    e.preventDefault()\n    this.setState({showModal: false}, callback ? callback() : null)\n    return null\n  }\n  static getDerivedStateFromProps(props: any, _state: any): any {\n    return {\n      showModal: props.show,\n      // ... other derived state properties\n    }\n  }\n  handleShow = () => {\n    this.setState({showModal: true})\n  }\n  componentDidUpdate(prevPros: any, _: any) {\n    if (this.props.show !== prevPros.show) {\n      this.setState({showModal: this.props.show})\n    }\n  }\n  render() {\n    const params: any = this.props.getModalData ? this.props.getModalData() : {}\n    return (\n      <div id=\"modal-wrap-alert-modal\">\n        <div className=\"modal-container\">\n          <Modal\n            show={this.state.showModal}\n            container={this.props.container}\n            onHide={this.handleHide.bind(this)}\n            bsSize=\"large\"\n            backdrop=\"static\"\n            aria-labelledby=\"contained-modal-title-lg\"\n            className=\"ModalMessage__container\"\n          >\n            <Modal.Header>\n              <Modal.Title>\n                <div className=\"ModalMessage__title\">\n                  {this.props.MessageTitle}\n                </div>\n              </Modal.Title>\n              <Button\n                className={`ModalMessage__ic ${\n                  this.props.icStyles ? this.props.icStyles : ''\n                }`}\n                onClick={e => this.handleHide(e, this.props.CloseAction)}\n              >\n                <i className=\"fa fa-times\"></i>\n              </Button>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"col-xs-12 col-sm-12 ModalMessage__content\">\n                <div\n                  className={`col-xs-12 col-sm-2 ModalMessage__icMain ${\n                    this.props.IconoColor\n                      ? `ModalMessage__icMain${this.props.IconoColor}`\n                      : ''\n                  }`}\n                >\n                  {this.props.Icono}\n                </div>\n                <div className=\"col-xs-12 col-sm-10 ModalMessage__message\">\n                  <div className=\"col-xs-12 pl-0 pr-0\">\n                    {this.props.msg || params.messageModal}\n                  </div>\n                  {this.props.buttonsZone ? (\n                    <div\n                      className=\"col-xs-12 pl-0 pr-0\"\n                      style={this.props.buttonsZoneStyle}\n                    >\n                      {this.props.buttonsZone}\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              </div>\n              <div className=\"clearfix\">\n                {this.props.AltButtonAction && this.props.MainButtonText ? (\n                  <Button\n                    className={'ModalMessage__btn btn btn-default'}\n                    onClick={e =>\n                      this.handleHide(e, this.props.AltButtonAction)\n                    }\n                  >\n                    {this.props.MainButtonText}\n                  </Button>\n                ) : (\n                  <></>\n                )}\n              </div>\n            </Modal.Body>\n          </Modal>\n        </div>\n      </div>\n    )\n  }\n}\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ModalMessage","React","Component","constructor","this","showModal","setState","handleHide","e","callback","preventDefault","getDerivedStateFromProps","props","_state","show","componentDidUpdate","prevPros","_","render","params","getModalData","id","className","Modal","state","container","onHide","bind","bsSize","backdrop","Header","Title","MessageTitle","Button","icStyles","onClick","CloseAction","Body","IconoColor","Icono","msg","messageModal","buttonsZone","buttonsZoneStyle","AltButtonAction","MainButtonText"],"mappings":"0EAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,+1LCCjCe,UAAqBC,EAAMC,UAAxCC,kCACEC,WAAkB,CAChBC,WAAW,GAabD,gBAAa,KACXA,KAAKE,SAAS,CAACD,WAAW,KAZ5BE,WAAWC,EAAQC,GAGjB,OAFAD,EAAEE,iBACFN,KAAKE,SAAS,CAACD,WAAW,GAAQI,EAAWA,IAAa,MACnD,KAETE,gCAAgCC,EAAYC,GAC1C,MAAO,CACLR,UAAWO,EAAME,MAOrBC,mBAAmBC,EAAeC,GAC5Bb,KAAKQ,MAAME,OAASE,EAASF,MAC/BV,KAAKE,SAAS,CAACD,UAAWD,KAAKQ,MAAME,OAGzCI,SACE,MAAMC,EAAcf,KAAKQ,MAAMQ,aAAehB,KAAKQ,MAAMQ,eAAiB,GAC1E,OACEnB,uBAAKoB,GAAG,0BACNpB,uBAAKqB,UAAU,mBACbrB,gBAACsB,GACCT,KAAMV,KAAKoB,MAAMnB,UACjBoB,UAAWrB,KAAKQ,MAAMa,UACtBC,OAAQtB,KAAKG,WAAWoB,KAAKvB,MAC7BwB,OAAO,QACPC,SAAS,2BACO,2BAChBP,UAAU,2BAEVrB,gBAACsB,EAAMO,YACL7B,gBAACsB,EAAMQ,WACL9B,uBAAKqB,UAAU,uBACZlB,KAAKQ,MAAMoB,eAGhB/B,gBAACgC,GACCX,UAAW,oBACTlB,KAAKQ,MAAMsB,SAAW9B,KAAKQ,MAAMsB,SAAW,KAE9CC,QAAS3B,GAAKJ,KAAKG,WAAWC,EAAGJ,KAAKQ,MAAMwB,cAE5CnC,qBAAGqB,UAAU,kBAGjBrB,gBAACsB,EAAMc,UACLpC,uBAAKqB,UAAU,6CACbrB,uBACEqB,UAAW,4CACTlB,KAAKQ,MAAM0B,WACP,uBAAuBlC,KAAKQ,MAAM0B,aAClC,KAGLlC,KAAKQ,MAAM2B,OAEdtC,uBAAKqB,UAAU,6CACbrB,uBAAKqB,UAAU,uBACZlB,KAAKQ,MAAM4B,KAAOrB,EAAOsB,cAE3BrC,KAAKQ,MAAM8B,YACVzC,uBACEqB,UAAU,sBACV/B,MAAOa,KAAKQ,MAAM+B,kBAEjBvC,KAAKQ,MAAM8B,aAGdzC,mCAINA,uBAAKqB,UAAU,YACZlB,KAAKQ,MAAMgC,iBAAmBxC,KAAKQ,MAAMiC,eACxC5C,gBAACgC,GACCX,UAAW,oCACXa,QAAS3B,GACPJ,KAAKG,WAAWC,EAAGJ,KAAKQ,MAAMgC,kBAG/BxC,KAAKQ,MAAMiC,gBAGd5C"}