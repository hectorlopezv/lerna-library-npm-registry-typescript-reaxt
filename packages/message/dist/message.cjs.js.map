{"version":3,"file":"message.cjs.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../lib/message.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\r\nimport React from 'react' //llamado para creacion de componentes\r\nimport {Modal, Button} from 'react-bootstrap' //llamado para creacion de componentes de Bootstrap\r\nimport './styles.scss'\r\n\r\nexport interface IModalMessageProps {\r\n  show: boolean\r\n  showModal?: boolean\r\n  container?: any //this\r\n  MessageTitle: string\r\n  icStyles?: string\r\n  IconoColor?: string\r\n  Icono: JSX.Element\r\n  buttonsZone?: JSX.Element\r\n  msg: string\r\n  MainButtonText: string\r\n  buttonsZoneStyle?: any\r\n  getModalData?: (...args: any[]) => any\r\n  CloseAction: (...args: any[]) => any\r\n  AltButtonAction?: (...args: any[]) => any\r\n  MainButtonAction?: (...args: any[]) => any\r\n}\r\nexport interface stateTyp {\r\n  showModal: boolean\r\n}\r\nexport class ModalMessage extends React.Component<IModalMessageProps> {\r\n  state: stateTyp = {\r\n    showModal: false,\r\n  }\r\n  handleHide(e: any, callback?: (...args: any[]) => any) {\r\n    e.preventDefault()\r\n    this.setState({showModal: false}, callback ? callback() : null)\r\n    return null\r\n  }\r\n  static getDerivedStateFromProps(props: any, _state: any): any {\r\n    return {\r\n      showModal: props.show,\r\n      // ... other derived state properties\r\n    }\r\n  }\r\n  handleShow = () => {\r\n    this.setState({showModal: true})\r\n  }\r\n  componentDidUpdate(prevPros: any, _: any) {\r\n    if (this.props.show !== prevPros.show) {\r\n      this.setState({showModal: this.props.show})\r\n    }\r\n  }\r\n  render() {\r\n    const params: any = this.props.getModalData ? this.props.getModalData() : {}\r\n    return (\r\n      <>\r\n        {this.state.showModal && (\r\n          <div id=\"modal-wrap-alert-modal\">\r\n            <div className=\"modal-container\">\r\n              <Modal\r\n                show={this.state.showModal}\r\n                container={this.props.container}\r\n                onHide={this.handleHide.bind(this)}\r\n                bsSize=\"large\"\r\n                backdrop=\"static\"\r\n                aria-labelledby=\"contained-modal-title-lg\"\r\n                className=\"ModalMessage__container\"\r\n              >\r\n                <Modal.Header>\r\n                  <Modal.Title>\r\n                    <div\r\n                      className=\"ModalMessage__title\"\r\n                      tabIndex={0}\r\n                      aria-describedby=\"message_modal\"\r\n                    >\r\n                      <p id=\"message_modal\">{this.props.MessageTitle}</p>\r\n                    </div>\r\n                  </Modal.Title>\r\n                  <Button\r\n                    className={`ModalMessage__ic ${\r\n                      this.props.icStyles ? this.props.icStyles : ''\r\n                    }`}\r\n                    aria-label=\"close modal button\"\r\n                    onClick={e => this.handleHide(e, this.props.CloseAction)}\r\n                    tabIndex={-1}\r\n                  >\r\n                    <i className=\"fa fa-times\"></i>\r\n                  </Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <div className=\"col-xs-12 col-sm-12 ModalMessage__content\">\r\n                    <div\r\n                      className={`col-xs-12 col-sm-2 ModalMessage__icMain ${\r\n                        this.props.IconoColor\r\n                          ? `ModalMessage__icMain${this.props.IconoColor}`\r\n                          : ''\r\n                      }`}\r\n                    >\r\n                      {this.props.Icono}\r\n                    </div>\r\n                    <div\r\n                      className=\"col-xs-12 col-sm-10 ModalMessage__message\"\r\n                      tabIndex={0}\r\n                    >\r\n                      <div\r\n                        className=\"col-xs-12 pl-0 pr-0\"\r\n                        tabIndex={0}\r\n                        aria-describedby=\"message_modal\"\r\n                      >\r\n                        <p id=\"message_modal\">\r\n                          {' '}\r\n                          {this.props.msg || params.messageModal}\r\n                        </p>\r\n                      </div>\r\n                      {this.props.buttonsZone ? (\r\n                        <div\r\n                          className=\"col-xs-12 pl-0 pr-0\"\r\n                          style={this.props.buttonsZoneStyle}\r\n                        >\r\n                          {this.props.buttonsZone}\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\">\r\n                    {this.props.AltButtonAction && this.props.MainButtonText ? (\r\n                      <Button\r\n                        className={'ModalMessage__btn btn btn-default'}\r\n                        onClick={e =>\r\n                          this.handleHide(e, this.props.AltButtonAction)\r\n                        }\r\n                      >\r\n                        {this.props.MainButtonText}\r\n                      </Button>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                </Modal.Body>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ModalMessage","React","Component","constructor","this","showModal","setState","handleHide","e","callback","preventDefault","static","props","_state","show","componentDidUpdate","prevPros","_","render","params","getModalData","state","id","className","Modal","container","onHide","bind","bsSize","backdrop","Header","Title","tabIndex","MessageTitle","Button","icStyles","onClick","CloseAction","Body","IconoColor","Icono","msg","messageModal","buttonsZone","buttonsZoneStyle","AltButtonAction","MainButtonText"],"mappings":"4MAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,+1LCEjCe,UAAqBC,UAAMC,UAAxCC,kCACEC,WAAkB,CAChBC,WAAW,GAabD,gBAAa,KACXA,KAAKE,SAAS,CAACD,WAAW,KAZ5BE,WAAWC,EAAQC,GAGjB,OAFAD,EAAEE,iBACFN,KAAKE,SAAS,CAACD,WAAW,GAAQI,EAAWA,IAAa,MACnD,KAETE,gCAAgCC,EAAYC,GAC1C,MAAO,CACLR,UAAWO,EAAME,MAOrBC,mBAAmBC,EAAeC,GAC5Bb,KAAKQ,MAAME,OAASE,EAASF,MAC/BV,KAAKE,SAAS,CAACD,UAAWD,KAAKQ,MAAME,OAGzCI,SACE,MAAMC,EAAcf,KAAKQ,MAAMQ,aAAehB,KAAKQ,MAAMQ,eAAiB,GAC1E,OACEnB,gDACGG,KAAKiB,MAAMhB,WACVJ,+BAAKqB,GAAG,0BACNrB,+BAAKsB,UAAU,mBACbtB,wBAACuB,SACCV,KAAMV,KAAKiB,MAAMhB,UACjBoB,UAAWrB,KAAKQ,MAAMa,UACtBC,OAAQtB,KAAKG,WAAWoB,KAAKvB,MAC7BwB,OAAO,QACPC,SAAS,2BACO,2BAChBN,UAAU,2BAEVtB,wBAACuB,QAAMM,YACL7B,wBAACuB,QAAMO,WACL9B,+BACEsB,UAAU,sBACVS,SAAU,qBACO,iBAEjB/B,6BAAGqB,GAAG,iBAAiBlB,KAAKQ,MAAMqB,gBAGtChC,wBAACiC,UACCX,UAAW,oBACTnB,KAAKQ,MAAMuB,SAAW/B,KAAKQ,MAAMuB,SAAW,kBAEnC,qBACXC,QAAS5B,GAAKJ,KAAKG,WAAWC,EAAGJ,KAAKQ,MAAMyB,aAC5CL,UAAW,GAEX/B,6BAAGsB,UAAU,kBAGjBtB,wBAACuB,QAAMc,UACLrC,+BAAKsB,UAAU,6CACbtB,+BACEsB,UAAW,4CACTnB,KAAKQ,MAAM2B,WACP,uBAAuBnC,KAAKQ,MAAM2B,aAClC,KAGLnC,KAAKQ,MAAM4B,OAEdvC,+BACEsB,UAAU,4CACVS,SAAU,GAEV/B,+BACEsB,UAAU,sBACVS,SAAU,qBACO,iBAEjB/B,6BAAGqB,GAAG,iBACH,IACAlB,KAAKQ,MAAM6B,KAAOtB,EAAOuB,eAG7BtC,KAAKQ,MAAM+B,YACV1C,+BACEsB,UAAU,sBACVhC,MAAOa,KAAKQ,MAAMgC,kBAEjBxC,KAAKQ,MAAM+B,aAGd1C,mDAINA,+BAAKsB,UAAU,YACZnB,KAAKQ,MAAMiC,iBAAmBzC,KAAKQ,MAAMkC,eACxC7C,wBAACiC,UACCX,UAAW,oCACXa,QAAS5B,GACPJ,KAAKG,WAAWC,EAAGJ,KAAKQ,MAAMiC,kBAG/BzC,KAAKQ,MAAMkC,gBAGd7C"}